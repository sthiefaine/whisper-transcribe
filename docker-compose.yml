version: '3.8'

services:
  whisper-api:
    build: .
    ports:
      - "8090:8080"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - PYTHONHASHSEED=random
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - whisper-models:/opt/whisper.cpp/models
      - ./logs:/var/log/whisper
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 16G  # Augmenté de 12G à 16G
          cpus: '4.0'  # Augmenté de 3.0 à 4.0
        reservations:
          memory: 8G   # Augmenté de 4G à 8G
          cpus: '2.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 60s    # Augmenté de 30s à 60s
      timeout: 30s     # Augmenté de 10s à 30s
      retries: 5       # Augmenté de 3 à 5
      start_period: 120s  # Augmenté de 40s à 120s
    networks:
      - coolify
    # Configuration pour éviter les timeouts Coolify
    stop_grace_period: 300s  # 5 minutes pour arrêt gracieux
    stop_signal: SIGTERM

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "90:80"
      - "4443:443"
    depends_on:
      - whisper-api
    restart: unless-stopped 
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - coolify

networks:
  coolify:
    external: true

volumes:
  whisper-models: